SUBDIRS =
AM_CPPFLAGS = -I$(top_srcdir)/include
AM_LDFLAGS = -Wl,-rpath=$(prefix)/lib
LDADD = -L$(top_builddir)/src -lmlcortex
testdir = $(prefix)/test
test_PROGRAMS = test_flatten_layer test_conv1d_pipeline test_simple_linear_pipeline test_simple_linear_ddp test_replicate_layer test_skip_connection_pipeline test_activation test_components test_comms test_scaled_dotproduct_self_attention test_simple_linear_pipeline_ddp test_dnn_layer test_serialization test_optimizer test_cross_decoder test_pair_split_layer test_tensor test_dynamic_model test_skip_connection test_norm_layer test_simple_linear_2d test_multihead_self_attention test_accelerator test_basic test_simple_linear test_memorymanager test_softmax test_pipeline_1d test_managed_array test_matrix_tensor_contract test_multihead_cross_attention test_one_hidden_layer test_conv1d 
test_flatten_layer_SOURCES = test_flatten_layer.cpp 
test_flatten_layer_LDADD = $(LDADD)
test_flatten_layer_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_conv1d_pipeline_SOURCES = test_conv1d_pipeline.cpp 
test_conv1d_pipeline_LDADD = $(LDADD)
test_conv1d_pipeline_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_simple_linear_pipeline_SOURCES = test_simple_linear_pipeline.cpp 
test_simple_linear_pipeline_LDADD = $(LDADD)
test_simple_linear_pipeline_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_simple_linear_ddp_SOURCES = test_simple_linear_ddp.cpp 
test_simple_linear_ddp_LDADD = $(LDADD)
test_simple_linear_ddp_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_replicate_layer_SOURCES = test_replicate_layer.cpp 
test_replicate_layer_LDADD = $(LDADD)
test_replicate_layer_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_skip_connection_pipeline_SOURCES = test_skip_connection_pipeline.cpp 
test_skip_connection_pipeline_LDADD = $(LDADD)
test_skip_connection_pipeline_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_activation_SOURCES = test_activation.cpp 
test_activation_LDADD = $(LDADD)
test_activation_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_components_SOURCES = test_components.cpp 
test_components_LDADD = $(LDADD)
test_components_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_comms_SOURCES = test_comms.cpp 
test_comms_LDADD = $(LDADD)
test_comms_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_scaled_dotproduct_self_attention_SOURCES = test_scaled_dotproduct_self_attention.cpp 
test_scaled_dotproduct_self_attention_LDADD = $(LDADD)
test_scaled_dotproduct_self_attention_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_simple_linear_pipeline_ddp_SOURCES = test_simple_linear_pipeline_ddp.cpp 
test_simple_linear_pipeline_ddp_LDADD = $(LDADD)
test_simple_linear_pipeline_ddp_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_dnn_layer_SOURCES = test_dnn_layer.cpp 
test_dnn_layer_LDADD = $(LDADD)
test_dnn_layer_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_serialization_SOURCES = test_serialization.cpp 
test_serialization_LDADD = $(LDADD)
test_serialization_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_optimizer_SOURCES = test_optimizer.cpp 
test_optimizer_LDADD = $(LDADD)
test_optimizer_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_cross_decoder_SOURCES = test_cross_decoder.cpp 
test_cross_decoder_LDADD = $(LDADD)
test_cross_decoder_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_pair_split_layer_SOURCES = test_pair_split_layer.cpp 
test_pair_split_layer_LDADD = $(LDADD)
test_pair_split_layer_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_tensor_SOURCES = test_tensor.cpp 
test_tensor_LDADD = $(LDADD)
test_tensor_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_dynamic_model_SOURCES = test_dynamic_model.cpp 
test_dynamic_model_LDADD = $(LDADD)
test_dynamic_model_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_skip_connection_SOURCES = test_skip_connection.cpp 
test_skip_connection_LDADD = $(LDADD)
test_skip_connection_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_norm_layer_SOURCES = test_norm_layer.cpp 
test_norm_layer_LDADD = $(LDADD)
test_norm_layer_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_simple_linear_2d_SOURCES = test_simple_linear_2d.cpp 
test_simple_linear_2d_LDADD = $(LDADD)
test_simple_linear_2d_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_multihead_self_attention_SOURCES = test_multihead_self_attention.cpp 
test_multihead_self_attention_LDADD = $(LDADD)
test_multihead_self_attention_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_accelerator_SOURCES = test_accelerator.cpp 
test_accelerator_LDADD = $(LDADD)
test_accelerator_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_basic_SOURCES = test_basic.cpp 
test_basic_LDADD = $(LDADD)
test_basic_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_simple_linear_SOURCES = test_simple_linear.cpp 
test_simple_linear_LDADD = $(LDADD)
test_simple_linear_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_memorymanager_SOURCES = test_memorymanager.cpp 
test_memorymanager_LDADD = $(LDADD)
test_memorymanager_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_softmax_SOURCES = test_softmax.cpp 
test_softmax_LDADD = $(LDADD)
test_softmax_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_pipeline_1d_SOURCES = test_pipeline_1d.cpp 
test_pipeline_1d_LDADD = $(LDADD)
test_pipeline_1d_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_managed_array_SOURCES = test_managed_array.cpp 
test_managed_array_LDADD = $(LDADD)
test_managed_array_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_matrix_tensor_contract_SOURCES = test_matrix_tensor_contract.cpp 
test_matrix_tensor_contract_LDADD = $(LDADD)
test_matrix_tensor_contract_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_multihead_cross_attention_SOURCES = test_multihead_cross_attention.cpp 
test_multihead_cross_attention_LDADD = $(LDADD)
test_multihead_cross_attention_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_one_hidden_layer_SOURCES = test_one_hidden_layer.cpp 
test_one_hidden_layer_LDADD = $(LDADD)
test_one_hidden_layer_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@
test_conv1d_SOURCES = test_conv1d.cpp 
test_conv1d_LDADD = $(LDADD)
test_conv1d_LINK = $(CXXLD) $(AM_LDFLAGS) $(LDFLAGS) -o $@

